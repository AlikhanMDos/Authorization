basePath: /api/v1
consumes:
- application/json
definitions:
  main.Post:
    properties:
      author:
        type: string
      author_id:
        type: string
      date:
        type: string
      id:
        type: string
      image:
        type: string
      text:
        type: string
      title:
        type: string
    type: object
  main.User:
    properties:
      name:
        type: string
      password:
        type: string
      phone:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Authorization
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login an existing user with phone number and password
      parameters:
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/main.User'
      produces:
      - application/json
      responses:
        "200":
          description: User logged in successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Invalid phone or password
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error generating token
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login an existing user
      tags:
      - User
  /logout:
    post:
      consumes:
      - application/json
      description: Logout the current user by clearing the JWT token
      produces:
      - application/json
      responses:
        "200":
          description: Logged out successfully
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Logout the current user
      tags:
      - User
  /posts:
    get:
      consumes:
      - application/json
      description: Get all posts from the database
      produces:
      - application/json
      responses:
        "200":
          description: List of posts
          schema:
            items:
              $ref: '#/definitions/main.Post'
            type: array
        "500":
          description: Failed to fetch posts or parse posts
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all posts
      tags:
      - Post
    post:
      consumes:
      - application/json
      description: Create a new post for the authenticated user
      parameters:
      - description: Post details
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/main.Post'
      produces:
      - application/json
      responses:
        "200":
          description: Post created successfully
          schema:
            $ref: '#/definitions/main.Post'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to create post
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new post
      tags:
      - Post
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing post by ID for the authenticated user
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Post deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid post ID
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to delete post
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a post
      tags:
      - Post
    put:
      consumes:
      - application/json
      description: Update an existing post by ID for the authenticated user
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      - description: Post details
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/main.Post'
      produces:
      - application/json
      responses:
        "200":
          description: Post updated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid post ID or input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to update post
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a post
      tags:
      - Post
  /protected:
    get:
      consumes:
      - application/json
      description: Access a protected route for authenticated users
      produces:
      - application/json
      responses:
        "200":
          description: Welcome to the protected route!
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Access protected route
      tags:
      - Example
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user with a unique phone number
      parameters:
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/main.User'
      produces:
      - application/json
      responses:
        "200":
          description: User registered successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error creating user
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - User
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get the profile of a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User profile
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User Id is required or Failed to fetch user profile
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user profile
      tags:
      - User
  /users/{id}/password:
    put:
      consumes:
      - application/json
      description: Update the password for the authenticated user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/main.User'
      produces:
      - application/json
      responses:
        "200":
          description: Profile updated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid ID or input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to update profile info
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update user password
      tags:
      - User
produces:
- application/json
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
tags:
- description: Cool Description
  externalDocs:
    description: Best example documentation
    url: https://example.com
  name: This is the name of the tag
